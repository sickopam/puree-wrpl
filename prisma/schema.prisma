generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  //@db.Text
  access_token       String?  //@db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  //@db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model merchant {
  merchant_id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  category    String
  address     String
  merchant_email String @unique
  merchant_password String
}

model driver {
  driver_id      String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name           String
  phoneNumber    Int      @unique
  driver_email          String   @unique
  driver_password String
  numberPlate    String   @unique
  vehicleBrand   String
  vehicleColor   String
  createdAt      DateTime @default(now())
  profilePicture String?
  session_state  String?
}
